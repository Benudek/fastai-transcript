############################
### Making a course book ###
############################


### Prep Course outlines ###

ScrapBookX http://forums.fast.ai/t/another-treat-early-access-to-intro-to-machine-learning-videos/6826/281
XXX: is there a way to get just a single post in discourse? then wget/curl would be easier!

# cleanup
perl -pi -e 's|<span class="badge badge-notification clicks" title="\d+ clicks?">\d+</span>||g; s| rel="nofollow noopener"||g' index.html
perl -0777 -pi -e 's|^.*?<\!--DOCUMENT_FRAGMENT-->||msg; s|<\!--/DOCUMENT_FRAGMENT-->.*||msg' index.html
perl -pi -e 's|Lecture (\d)<|Lecture 0$1<|' index.html

# split
perl -0777 -n -e 'while (m#(<h2>.*?Lecture (\d\d)</a></h2>).*?<p>(.*?)</p>#msg) { $h = $1; $f = "outline $2.html"; $t = $3; $out = join "\n", $h, map {"<td>$_</td>"} split /<br>\n/, $t; open $fh, ">$f" or die "$!"; print $fh "$out\n\n" }' index.html




### Prep Video timelines ###

ScrapBookX http://forums.fast.ai/t/another-treat-early-access-to-intro-to-machine-learning-videos/6826/321

perl -pi -e 's|<span class="badge badge-notification clicks" title="\d+ clicks?">\d+</span>||g; s| rel="nofollow noopener"||g' index.html
perl -0777 -pi -e 's|^.*?<\!--DOCUMENT_FRAGMENT-->||msg; s|<\!--/DOCUMENT_FRAGMENT-->.*||msg' index.html
perl -pi -e 's|Lesson (\d)<|Lesson 0$1<|' index.html

# remove mathjax markup and anyt remaining styling
perl -pi -e 's|<span[^>]+>||g; s|</span>||g;' index.html
perl -pi -e 's|<script.*?</script>||g;' index.html


# manually remove the text on top of the post, so it starts with Lesson 1

# split
perl -0777 -n -e '@l = split m#(?=<p><strong>Lesson \d\d</strong></p>)#, $_;  for $t (@l) { if ($t=~/Lesson (\d\d)/) { $n = $1 };  open $fh, ">timeline $n.html" or die "$!"; print $fh "$t\n\n" } ' index.html


### Prep Auto-generated Youtube subtitles ###

1. download .srt files from youtube

2. rename to be like "lesson 01.srt"

3. remove fonts
perl -pi -e 's|<font color=".*?">||g; s|</font>||g' *srt



### Integrate Auto-generated Youtube subtitles with Video timelines ###

./integrate.pl 

# XXX: Will need to integrate the MathAjax code from scrapbook and run the JS when building the book




__OTHER__

Alternatively the autogenerated subs can be fed to punctuator to make a one huge paragraph per lesson.

# 1. strip everything but text in srt files
#perl -pi -e 's|^\d\d:\d\d:\d\d,\d+ --> \d\d:\d\d:\d\d,\d+$||; s|^\d+$||; s|^[\r\n]$||; ' lesson*srt


2. feed it to punctuator

perl -MLWP::UserAgent -e 'for $f (@ARGV) { \
$f =~ s/\.srt//; \
open $fh, "<$f.srt" or die "$!"; \
$t = do { local $/; <$fh> }; \
open $fh, ">$f.txt" or die "$!";  \
print "processing: $f\n"; \
print $fh LWP::UserAgent->new()->post("http://bark.phon.ioc.ee/punctuator", {text => $t})->decoded_content() \
}' lesson*srt

4. some cleanup of auto-generated subtitles

# formatting
perl -pi -e '$q = chr(39); s|($q[STM] )|lc($1)|eg' lesson*txt

# common mispellings
perl -pi -e 's|Cagle|Kaggle|ig; s|Kressel|Crestle|ig; s|fast AI|fastai|ig; ' lesson*txt

# add some paras
perl -pi -e 's|\[,? Music,? \]|\n\n|msg;' lesson*txt
perl -pi -e 's|(.{1300,1500} [a-z]+\.) +([A-Z])|$1\n\n$2|msg' lesson*txt

# result: lesson 01.txt files with just somewhat cleaned up transcription